{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tokmo\\\\fake-news-detectorv1\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Check if token exists in local storage\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('userData');\n    if (token && userData) {\n      // Set the axios auth header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setCurrentUser(JSON.parse(userData));\n    }\n    setLoading(false);\n  }, []);\n\n  // Register user\n  const register = async (nickname, email, password) => {\n    try {\n      setError('');\n      const response = await axios.post('http://localhost:5000/api/users/register', {\n        nickname,\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Save token and user data to local storage\n      localStorage.setItem('token', token);\n      localStorage.setItem('userData', JSON.stringify(user));\n\n      // Set axios auth header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setCurrentUser(user);\n      return user;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed');\n      throw error;\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      setError('');\n      const response = await axios.post('http://localhost:5000/api/users/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Save token and user data to local storage\n      localStorage.setItem('token', token);\n      localStorage.setItem('userData', JSON.stringify(user));\n\n      // Set axios auth header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setCurrentUser(user);\n      return user;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed');\n      throw error;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userData');\n    delete axios.defaults.headers.common['Authorization'];\n    setCurrentUser(null);\n  };\n\n  // Update user profile\n  const updateProfile = async (nickname, currentPassword, newPassword) => {\n    try {\n      setError('');\n      const response = await axios.put('http://localhost:5000/api/users/profile', {\n        nickname,\n        currentPassword,\n        newPassword\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Save updated token and user data to local storage\n      localStorage.setItem('token', token);\n      localStorage.setItem('userData', JSON.stringify(user));\n\n      // Update axios auth header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setCurrentUser(user);\n      return user;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed');\n      throw error;\n    }\n  };\n  const value = {\n    currentUser,\n    loading,\n    error,\n    register,\n    login,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"vSB9Nc0q2BGZUhjg31O+gFt0Mxs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","error","setError","token","localStorage","getItem","userData","defaults","headers","common","JSON","parse","register","nickname","email","password","response","post","user","data","setItem","stringify","_error$response","_error$response$data","message","login","_error$response2","_error$response2$data","logout","removeItem","updateProfile","currentPassword","newPassword","put","_error$response3","_error$response3$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tokmo/fake-news-detectorv1/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Check if token exists in local storage\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('userData');\r\n    \r\n    if (token && userData) {\r\n      // Set the axios auth header\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setCurrentUser(JSON.parse(userData));\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Register user\r\n  const register = async (nickname, email, password) => {\r\n    try {\r\n      setError('');\r\n      const response = await axios.post('http://localhost:5000/api/users/register', {\r\n        nickname,\r\n        email,\r\n        password\r\n      });\r\n      \r\n      const { token, user } = response.data;\r\n      \r\n      // Save token and user data to local storage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('userData', JSON.stringify(user));\r\n      \r\n      // Set axios auth header\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setCurrentUser(user);\r\n      return user;\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || 'Registration failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Login user\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError('');\r\n      const response = await axios.post('http://localhost:5000/api/users/login', {\r\n        email,\r\n        password\r\n      });\r\n      \r\n      const { token, user } = response.data;\r\n      \r\n      // Save token and user data to local storage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('userData', JSON.stringify(user));\r\n      \r\n      // Set axios auth header\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setCurrentUser(user);\r\n      return user;\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || 'Login failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Logout user\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userData');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (nickname, currentPassword, newPassword) => {\r\n    try {\r\n      setError('');\r\n      const response = await axios.put('http://localhost:5000/api/users/profile', {\r\n        nickname,\r\n        currentPassword,\r\n        newPassword\r\n      });\r\n      \r\n      const { token, user } = response.data;\r\n      \r\n      // Save updated token and user data to local storage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('userData', JSON.stringify(user));\r\n      \r\n      // Update axios auth header\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setCurrentUser(user);\r\n      return user;\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || 'Profile update failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    loading,\r\n    error,\r\n    register,\r\n    login,\r\n    logout,\r\n    updateProfile\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}