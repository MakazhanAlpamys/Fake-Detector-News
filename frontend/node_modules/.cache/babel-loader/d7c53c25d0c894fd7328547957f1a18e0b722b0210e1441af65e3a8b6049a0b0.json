{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tokmo\\\\fake-news-detectorv1\\\\frontend\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  // Check if user has a theme preference in localStorage or prefers dark mode\n  const getInitialTheme = () => {\n    const savedTheme = localStorage.getItem('theme');\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    return savedTheme || (prefersDark ? 'dark' : 'light');\n  };\n  const [theme, setTheme] = useState(getInitialTheme);\n\n  // Apply theme to body element and store in localStorage\n  useEffect(() => {\n    document.body.setAttribute('data-theme', theme);\n    localStorage.setItem('theme', theme);\n    if (theme === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [theme]);\n\n  // Toggle between light and dark mode\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"DZ93y6MoushHNJ3xDqNSOypNhgY=\");\n_c = ThemeProvider;\nexport default ThemeContext;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","ThemeProvider","children","_s2","getInitialTheme","savedTheme","localStorage","getItem","prefersDark","window","matchMedia","matches","theme","setTheme","document","body","setAttribute","setItem","documentElement","classList","add","remove","toggleTheme","prevTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tokmo/fake-news-detectorv1/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  // Check if user has a theme preference in localStorage or prefers dark mode\r\n  const getInitialTheme = () => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    \r\n    return savedTheme || (prefersDark ? 'dark' : 'light');\r\n  };\r\n\r\n  const [theme, setTheme] = useState(getInitialTheme);\r\n\r\n  // Apply theme to body element and store in localStorage\r\n  useEffect(() => {\r\n    document.body.setAttribute('data-theme', theme);\r\n    localStorage.setItem('theme', theme);\r\n    \r\n    if (theme === 'dark') {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n  }, [theme]);\r\n\r\n  // Toggle between light and dark mode\r\n  const toggleTheme = () => {\r\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContext; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,YAAY,CAAC;AAAA;AAACE,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;IAE7E,OAAON,UAAU,KAAKG,WAAW,GAAG,MAAM,GAAG,OAAO,CAAC;EACvD,CAAC;EAED,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAACW,eAAe,CAAC;;EAEnD;EACAV,SAAS,CAAC,MAAM;IACdoB,QAAQ,CAACC,IAAI,CAACC,YAAY,CAAC,YAAY,EAAEJ,KAAK,CAAC;IAC/CN,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;IAEpC,IAAIA,KAAK,KAAK,MAAM,EAAE;MACpBE,QAAQ,CAACI,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLN,QAAQ,CAACI,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;EACF,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBT,QAAQ,CAACU,SAAS,IAAIA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EACjE,CAAC;EAED,oBACE1B,OAAA,CAACC,YAAY,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAEb,KAAK;MAAEU;IAAY,CAAE;IAAApB,QAAA,EAClDA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAC1B,GAAA,CAjCWF,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAmC1B,eAAeH,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}